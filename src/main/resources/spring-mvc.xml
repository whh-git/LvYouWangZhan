<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">


	 <!-- 启用SpringMVC的注解功能,它会自动注册HandlerMapping、HandlerAdapter、ExceptionResolver的相关实例 -->
    <mvc:annotation-driven />
    <!-- SpringMVC的扫描范围 -->
    <context:component-scan base-package="com.tourism.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>
	
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="prettyPrint" value="true"/>
            </bean>
  		</mvc:message-converters>
	</mvc:annotation-driven>

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
			<bean id="fastJsonHttpMessageConverter"
				  class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 模板引擎thymeleaf -->
	<bean id="servletContextTemplateResolver"
		  class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<property name="prefix" value="templates/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML5" />
		<property name="characterEncoding" value="UTF-8" />
		<property name="order" value="1" />
		<property name="cacheable" value="false" />
	</bean>
	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolvers">
			<set>
				<ref bean="servletContextTemplateResolver" />
			</set>
		</property>
	</bean>
	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
		<property name="characterEncoding" value="UTF-8" />
	</bean>

	<!-- 静态资源的访问 -->
	<!-- <mvc:default-servlet-handler /> -->
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/fonts/**" location="/fonts/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/componets/**" location="/componets/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/templates/**" location="/templates/" />
	<mvc:resources mapping="/assets/**" location="/assets/" />
	<mvc:resources mapping="/upload/**" location="/upload/" />

	 <!--配置拦截器, 多个拦截器,顺序执行 -->  
	    <mvc:interceptors>
	        <mvc:interceptor>
	            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
	            <mvc:mapping path="/login/*" />  
	            <mvc:mapping path="/base/*" />
	            <bean class="com.tourism.interceptor.RequestInterceptor"></bean>
	        </mvc:interceptor>
	        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
	    </mvc:interceptors>

</beans>
